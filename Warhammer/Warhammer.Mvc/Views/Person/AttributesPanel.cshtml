@using Warhammer.Core
@using Warhammer.Core.Models
@model Warhammer.Core.Models.CharacterAttributeModel

@if (Model.CharacterInfo.CanEdit || Model.PersonAttributes.Any(a => !a.PersonAttribute.IsPrivate))
{
    <div id="characterattributes" class="content-block">
        @if (Model.CharacterInfo.CanEdit)
        {
            if (Model.ShowWearTrack)
            {
                 @Html.Partial("_WearTrack", Model)
             }
            @Html.Partial("_AttributeEdit", Model)
            <div class="alert alert-info">
                <table class="table attribute-table">
                    <tr>
                        <td>Current XP</td>
                        <td ><span class="personAttribute label label-success">@Model.CurrentXp</span></td>
                    </tr>
                    <tr>
                        <td>XP Spent</td>
                        <td><span class="personAttribute label label-danger">@(Model.XpSpent).00</span></td>
                    </tr>
                    <tr>
                        <td>Advances Taken</td>
                        <td ><span class="personAttribute label label-success">@Model.TotalAdvancesTaken</span></td>
                    </tr>
                    <tr>
                        <td>Tax Level</td>
                        <td ><span class="personAttribute label label-info">+@Model.CharacterLevel</span></td>
                    </tr>
                    @if (Model.CharacterInfo.HasAttributeMoveAvailable)
                    {
                        <tr>
                            <td>Shift Available</td>
                            <td><span class="personAttribute label label-info">&#10004;</span></td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td>Shift Available</td>
                            <td><span class="personAttribute label label-default">&#10008;</span></td>
                        </tr>

                    }
                    @if (ViewBag.EditMode && Model.CanAddXp)
                    {
                        <tr>
                            <td>Add XP</td>
                            <td>
                                @using (Ajax.BeginForm("AddXp", "Person", new AjaxOptions {InsertionMode = InsertionMode.ReplaceWith, HttpMethod = "Post", UpdateTargetId = "characterattributes"}))
                                {
                                    <input type="hidden" value="@Model.PersonId" name="personId"/>
                                    <input type="number" step="any" class="form-control" name="amount"/>
                                    <input type="submit" value="+ Add" class="btn btn-block btn-success"/>
                                }
                            </td>
                        </tr>

                    }
                </table>
            </div>
        }

        @if (ViewBag.EditMode && Model.CharacterInfo.CanEdit)
        {
            <div class="alert alert-info">
                <h4>Stats</h4>
                <table class="table">
                    @Html.EditorFor(m => m.Stats)
                </table>
            </div>

            <div class="alert alert-success">
                <h4>Roles</h4>
                <table class="table attribute-table">
                    @Html.EditorFor(m => m.Roles)
                </table>


                @if (Model.CanAddNew(AttributeType.Role))
                {
                    using (Ajax.BeginForm("BuyNewAttribute", "Person", new AjaxOptions {InsertionMode = InsertionMode.ReplaceWith, HttpMethod = "Post", UpdateTargetId = "characterattributes"}))
                    {
                        <input type="hidden" value="@Model.PersonId" name="personId"/>
                        <input type="hidden" value="@AttributeType.Role" name="attributeType"/>
                        <input type="text" value="" placeholder="Role Name" name="name" class="form-control"/>
                        <textarea value="" placeholder="Description" name="description" class="form-control"></textarea>
                        <input type="submit" value="Add Role for @Model.NewCost(AttributeType.Role) XP" class="btn btn-block btn-success"/>
                    }
                }
                else
                {
                    <input type="button"  disabled="disabled" value="New Role: @(Model.NewCost(AttributeType.Role)) XP" class="btn btn-block btn-default"/>
                }
            </div>

            <div class="alert alert-success">
                <h4>Skills</h4>
                <table class="table attribute-table">
                    @Html.EditorFor(m => m.Skills)
                </table>

                @if (Model.CanAddNew(AttributeType.Skill))
                {
                    using (Ajax.BeginForm("BuyNewAttribute", "Person", new AjaxOptions {InsertionMode = InsertionMode.ReplaceWith, HttpMethod = "Post", UpdateTargetId = "characterattributes"}))
                    {
                        <input type="hidden" value="@Model.PersonId" name="personId"/>
                        <input type="hidden" value="@AttributeType.Skill" name="attributeType"/>
                        <input type="text" value="" placeholder="Skill Name" name="name" class="form-control"/>
                        <textarea value="" placeholder="Description" name="description" class="form-control"></textarea>
                        <input type="submit" value="Add Skill for @Model.NewCost(AttributeType.Skill) XP" class="btn btn-block btn-success"/>
                    }
                }
                else
                {
                    <input type="button"  disabled="disabled" value="New Skill: @(Model.NewCost(AttributeType.Skill)) XP" class="btn btn-block btn-default"/>
                }
            </div>

            <div class="alert alert-warning">
                <h4>Descriptors</h4>
                <table class="table">
                    @Html.EditorFor(m => m.Descriptors)
                </table>

                @if (Model.CanAddNew(AttributeType.Descriptor))
                {
                    using (Ajax.BeginForm("BuyNewAttribute", "Person", new AjaxOptions {InsertionMode = InsertionMode.ReplaceWith, HttpMethod = "Post", UpdateTargetId = "characterattributes"}))
                    {
                        <input type="hidden" value="@Model.PersonId" name="personId"/>
                        <input type="hidden" value="@AttributeType.Descriptor" name="attributeType"/>
                        <input type="text" value="" placeholder="Descriptor Name" name="name" class="form-control"/>
                        <textarea value="" placeholder="Description" name="description" class="form-control"></textarea>
                        <input type="submit" value="Add Descriptor for @Model.NewCost(AttributeType.Descriptor) XP" class="btn btn-block btn-success"/>
                    }
                }
                else
                {
                    <input type="button"  disabled="disabled" value="New Descriptor: @(Model.NewCost(AttributeType.Descriptor)) XP" class="btn btn-block btn-default"/>
                }
            </div>

            <div class="alert alert-danger">
                
                <h4>Edge</h4>
                <table class="table">
                    @Html.EditorFor(m => m.Edge)
                </table>

                @if (Model.CanAddNew(AttributeType.Edge))
                {
                    using (Ajax.BeginForm("BuyNewAttribute", "Person", new AjaxOptions { InsertionMode = InsertionMode.ReplaceWith, HttpMethod = "Post", UpdateTargetId = "characterattributes" }))
                    {
                        <input type="hidden" value="@Model.PersonId" name="personId" />
                        <input type="hidden" value="@AttributeType.Edge" name="attributeType" />
                        <input type="submit" value="Add New Edge slot for @Model.NewCost(AttributeType.Edge) XP" class="btn btn-block btn-success" />
                    }
                }
                else
                {
                    <input type="button"  disabled="disabled" value="New Edge: @(Model.NewCost(AttributeType.Edge)) XP" class="btn btn-block btn-default"/>
                }

                @if (Model.FixedWearAndHarm)
                {
                    @Html.Partial("_FixedWearAndHarm", Model)
                }
                else
                {
                    @Html.Partial("_DynamicWearAndHarm", Model)
                }

            </div>
        }
        else
        {
            if ((Model.Stats.Any() && Model.CharacterInfo.CanEdit) || Model.Stats.Any(s => !s.PersonAttribute.IsPrivate))
            {
                <div class="alert alert-info">
                    <h4>Stats</h4>
                    <table class="table attribute-table">
                        @Html.DisplayFor(m => m.Stats)
                    </table>
                </div>
            }
            if ((Model.Roles.Any() || Model.Skills.Any()) && Model.CharacterInfo.CanEdit || (Model.Roles.Any(s => !s.PersonAttribute.IsPrivate) || Model.Skills.Any(s => !s.PersonAttribute.IsPrivate)))
            {
                <div class="alert alert-success">
                    @if (Model.Roles.Any() && Model.CharacterInfo.CanEdit || Model.Roles.Any(s => !s.PersonAttribute.IsPrivate))
                    {
                        <h4>Roles</h4>
                        <table class="table attribute-table">
                            @Html.DisplayFor(m => m.Roles)
                        </table>
                    }
                    @if (Model.Skills.Any() && Model.CharacterInfo.CanEdit || Model.Skills.Any(s => !s.PersonAttribute.IsPrivate))
                    {
                        <h4>Skills</h4>
                        <table class="table attribute-table">
                            @Html.DisplayFor(m => m.Skills)
                        </table>
                    }
                </div>
            }

            if (Model.Descriptors.Any() && Model.CharacterInfo.CanEdit || Model.Descriptors.Any(s => !s.PersonAttribute.IsPrivate))
            {
                <div class="alert alert-warning">
                    <h4>Descriptors</h4>
                    <table class="table attribute-table">
                        @Html.DisplayFor(m => m.Descriptors)
                    </table>
                </div>
            }

            if ((Model.Wear.Any() || Model.Harm.Any() || Model.Edge.Any()) && Model.CharacterInfo.CanEdit)
            {
                <div class="alert alert-danger">
                    @if (Model.Edge.Any())
                    {
                        <h4>Edge</h4>
                        <table class="table attribute-table">
                            @Html.DisplayFor(m => m.Edge)
                        </table>
                    }
                    @if (Model.Wear.Any())
                    {
                        <h4>Wear</h4>
                        <table class="table attribute-table">
                            @Html.DisplayFor(m => m.Wear)
                        </table>
                    }
                    @if (Model.Harm.Any())
                    {
                        <h4>Harm</h4>
                        <table class="table attribute-table">
                            @Html.DisplayFor(m => m.Harm)
                        </table>
                    }
                </div>
            }
        }
    </div>
}
