@model Warhammer.Mvc.Models.PersonStatViewModel

@using (Ajax.BeginForm("SetStats", "Person", new AjaxOptions { InsertionMode = InsertionMode.Replace, HttpMethod = "Post", UpdateTargetId = "charStatsPanel" }))
{
    @Html.ValidationSummary("", new { @class = "text-danger" })
    @Html.HiddenFor(m => m.PersonId)
    @Html.HiddenFor(m => m.IsNpc)
    @Html.HiddenFor(m => m.IsFate)
    <input type="hidden" value="true" name="Posted" id="Posted"/>
    if (!Model.IsFate)
    {
        <div class="form-group">
            @Html.LabelFor(m => m.AddedRole, new {@class = "col-md-12 control-label"})
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.AddedRole, new {@class = "form-control"})
            </div>
        </div>
    }
    if (!Model.IsNpc)
     {
         <div class="form-group">
             @Html.LabelFor(m => m.AddedDescriptor1, new {@class = "col-md-12 control-label"})
             <div class="col-md-10">
                 @Html.TextBoxFor(m => m.AddedDescriptor1, new {@class = "form-control"})
             </div>
         </div>
         <div class="form-group">
             @Html.LabelFor(m => m.AddedDescriptor2, new {@class = "col-md-12 control-label"})
             <div class="col-md-10">
                 @Html.TextBoxFor(m => m.AddedDescriptor2, new {@class = "form-control"})
             </div>
         </div>
         <div class="form-group">
             @Html.LabelFor(m => m.AddedDescriptor3, new {@class = "col-md-12 control-label"})
             <div class="col-md-10">
                 @Html.TextBoxFor(m => m.AddedDescriptor3, new {@class = "form-control"})
             </div>
         </div>
     }
    <div class="form-group">
        @if (Model.IsFate)
        {
            <div class="alert alert-success">
                <h3>Create Stats</h3>
                <p>Set your charaacter's initial stats. The stats total 8 points worth and must be distributed as follows:</p>
                <br />
                <ul>
                    <li>One stat at 3</li>
                    <li>Two stats at 2</li>
                    <li>Two stats at 1</li>
                    <li>Two stats at 0</li>
                    <li>One stat at -1</li>
                </ul>
            </div>
        }
        else
        {
            @Html.LabelFor(m => m.Stats, new { @class = "col-md-12 control-label" })
        }

        <div class="col-md-10">


            @{
                int i = 0;
                foreach (var item in Model.Stats)
                {
                    <div class="row">
                        <input type="hidden" name="Stats[@i].Key" value="@item.Key"/>
                        <label>@item.Key.ToString().Replace("_", " ")</label>
                        <input class="form-control" type="number" name="Stats[@i].Value" value="@item.Value"/>
                        @{
                            i++;
                        }
                    </div>
                }
            }
        </div>



    </div>

    <div class="form-group">
     
            <input type="submit" value="Set Stats" class="btn btn-block btn-success" />
   
    </div>

                            }
