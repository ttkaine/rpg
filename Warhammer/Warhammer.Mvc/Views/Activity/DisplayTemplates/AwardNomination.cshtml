@using Warhammer.Core.Extensions
@using Warhammer.Mvc.Models
@model Warhammer.Core.Entities.AwardNomination
<tr>
    <td>
        @Html.Partial("PageImage", new ImageViewModel {Id = Model.Person.Id, Name = Model.Person.ShortName, Url = Model.Person.ImageUrl })
    </td>
    <td>
        <a href="@Url.Action("Trophy", "Home", new { id = Model.Trophy.Id})"><img src="@Model.Trophy.FileIdentifier.ToImageUrl()" title="@Model.Trophy.Name @Model.NominationReason" alt="Picture of @Model.Trophy.Name" class="mini-trophy-image" /></a>
    </td>
    <td class="name">
        @Model.Player.DisplayName nominated @Model.Person.FullName for an award! 
        <br/> @Model.Trophy.Name @Model.NominationReason
        @if (Model.AwardedOn.HasValue)
        {
            <br />
            <span class="note">
                Accepted <br/> @Model.AcceptedReason
            </span>
        }
        @if (Model.RejectedOn.HasValue)
        {
            <br />
            <span class="note">
                Rejected <br/> @Model.RejectedReason
            </span>
        }
    </td>
</tr>
<tr>
    <td colspan="3">
        <span class="note">
            @if (Model.NominatedDate.HasValue)
            {
                <text>
                   Nominated @Model.NominatedDate.Value.ToLongDateString() : @Model.NominatedDate.Value.ToShortTimeString()
                </text>
            }
           
            @if (Model.AwardedOn.HasValue)
            {
                <text>
                   ::  Awarded @Model.AwardedOn.Value.ToLongDateString() : @Model.AwardedOn.Value.ToShortTimeString()
                </text>
            }
            @if (Model.RejectedOn.HasValue)
            {
                <text>
                  ::  Rejected @Model.RejectedOn.Value.ToLongDateString() : @Model.RejectedOn.Value.ToShortTimeString()
                </text>
            }
        </span>
    </td>
</tr>

